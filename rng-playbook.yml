# Use the ec2 module to create a new host and then add
# it to a special "ec2hosts" group.

- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    keypair: "id_rsa"
    instance_type: "t1.micro"
    image: "ami-896c96fe"
    group: "spray"
    region: "eu-west-1"
    zone: "eu-west-1a"
  tasks:
    - name: make one instance
      ec2: image={{ image }}
           instance_type={{ instance_type }}
           keypair={{ keypair }}
           instance_tags='{"foo":"bar"}'
           region={{ region }}
           group={{ group }}
           wait=true
      register: ec2_info

    - debug: var=ec2_info
    - debug: var=item
      with_items: ec2_info.instance_ids

    - add_host: hostname={{ item.public_ip }} groupname=ec2hosts
      with_items: ec2_info.instances

    - name: wait for instances to listen on port:22
      wait_for:
        state=started
        host={{ item.public_dns_name }}
        port=22
      with_items: ec2_info.instances


# Connect to the node and gather facts,
# including the instance-id. These facts
# are added to inventory hostvars for the
# duration of the playbook's execution
# Typical "provisioning" tasks would go in
# this playbook.

- hosts: ec2hosts
  gather_facts: True
  user: ubuntu
  sudo: True
  tasks:

    # fetch instance data from the metadata servers in ec2
    - ec2_facts:

    # show all known facts for this host
    - debug: var=hostvars[inventory_hostname]

    # just show the instance-id
    - debug: msg="{{ hostvars[inventory_hostname]['ansible_ec2_instance_id'] }}"


# Using the instanceid, call the ec2 module
# locally to remove the instance by declaring
# it's state is "absent"

- hosts: ec2hosts
  gather_facts: True
  user: ubuntu
  tags: deploy
  sudo: True
  tasks:
      - ec2_facts:

      - name: install java 7
        apt: name=openjdk-7-jre state=latest install_recommends=no  update_cache=yes

      - name: copy the webapp
        copy: src=./target/universal/rng-0.1.0.tgz dest=/opt/

      - name: extract the webapp folder
        command: chdir=/opt/ tar -xvzf rng-0.1.0.tgz

      - name: start webapp
        command: chdir=/opt/rng-0.1.0 /opt/rng-0.1.0/bin/rng -mem 512 -Drng.host.public_dns={{ hostvars[inventory_hostname]['ansible_ec2_public_hostname'] }}
